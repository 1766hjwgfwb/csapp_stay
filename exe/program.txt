
program:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 94 2f 00 00    	jmp    *0x2f94(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64
    1054:	ff 25 9e 2f 00 00    	jmp    *0x2f9e(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <putchar@plt>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	ff 25 5e 2f 00 00    	jmp    *0x2f5e(%rip)        # 3fc8 <putchar@GLIBC_2.2.5>
    106a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001070 <__printf_chk@plt>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	ff 25 56 2f 00 00    	jmp    *0x2f56(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    107a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <main>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	53                   	push   %rbx
    1085:	31 c0                	xor    %eax,%eax
    1087:	bb 04 00 00 00       	mov    $0x4,%ebx
    108c:	e8 bf 03 00 00       	call   1450 <init_handler_table>
    1091:	66 0f 6f 05 47 10 00 	movdqa 0x1047(%rip),%xmm0        # 20e0 <_IO_stdin_used+0xe0>
    1098:	00 
    1099:	48 8d 05 c0 37 00 00 	lea    0x37c0(%rip),%rax        # 4860 <program+0x840>
    10a0:	48 bf 10 e2 fe ff ff 	movabs $0x7ffffffee210,%rdi
    10a7:	7f 00 00 
    10aa:	48 c7 05 eb 3b 00 00 	movq   $0x1,0x3beb(%rip)        # 4ca0 <reg+0x20>
    10b1:	01 00 00 00 
    10b5:	0f 11 05 c4 3b 00 00 	movups %xmm0,0x3bc4(%rip)        # 4c80 <reg>
    10bc:	66 0f 6f 05 2c 10 00 	movdqa 0x102c(%rip),%xmm0        # 20f0 <_IO_stdin_used+0xf0>
    10c3:	00 
    10c4:	48 89 05 f5 3b 00 00 	mov    %rax,0x3bf5(%rip)        # 4cc0 <reg+0x40>
    10cb:	0f 11 05 be 3b 00 00 	movups %xmm0,0x3bbe(%rip)        # 4c90 <reg+0x10>
    10d2:	66 0f 6f 05 26 10 00 	movdqa 0x1026(%rip),%xmm0        # 2100 <_IO_stdin_used+0x100>
    10d9:	00 
    10da:	0f 11 05 cf 3b 00 00 	movups %xmm0,0x3bcf(%rip)        # 4cb0 <reg+0x30>
    10e1:	e8 7a 05 00 00       	call   1660 <va2pa>
    10e6:	be 60 06 00 08       	mov    $0x8000660,%esi
    10eb:	48 89 c7             	mov    %rax,%rdi
    10ee:	e8 fd 03 00 00       	call   14f0 <wirtebits_dram>
    10f3:	48 bf 08 e2 fe ff ff 	movabs $0x7ffffffee208,%rdi
    10fa:	7f 00 00 
    10fd:	e8 5e 05 00 00       	call   1660 <va2pa>
    1102:	31 f6                	xor    %esi,%esi
    1104:	48 89 c7             	mov    %rax,%rdi
    1107:	e8 e4 03 00 00       	call   14f0 <wirtebits_dram>
    110c:	48 bf 00 e2 fe ff ff 	movabs $0x7ffffffee200,%rdi
    1113:	7f 00 00 
    1116:	e8 45 05 00 00       	call   1660 <va2pa>
    111b:	be cd ab 00 00       	mov    $0xabcd,%esi
    1120:	48 89 c7             	mov    %rax,%rdi
    1123:	e8 c8 03 00 00       	call   14f0 <wirtebits_dram>
    1128:	48 bf f8 e1 fe ff ff 	movabs $0x7ffffffee1f8,%rdi
    112f:	7f 00 00 
    1132:	e8 29 05 00 00       	call   1660 <va2pa>
    1137:	be 00 00 34 12       	mov    $0x12340000,%esi
    113c:	48 89 c7             	mov    %rax,%rdi
    113f:	e8 ac 03 00 00       	call   14f0 <wirtebits_dram>
    1144:	48 bf f0 e1 fe ff ff 	movabs $0x7ffffffee1f0,%rdi
    114b:	7f 00 00 
    114e:	e8 0d 05 00 00       	call   1660 <va2pa>
    1153:	be 60 06 00 08       	mov    $0x8000660,%esi
    1158:	48 89 c7             	mov    %rax,%rdi
    115b:	e8 90 03 00 00       	call   14f0 <wirtebits_dram>
    1160:	31 c0                	xor    %eax,%eax
    1162:	e8 b9 03 00 00       	call   1520 <print_register>
    1167:	31 c0                	xor    %eax,%eax
    1169:	e8 42 04 00 00       	call   15b0 <print_stack>
    116e:	31 c0                	xor    %eax,%eax
    1170:	e8 5b 02 00 00       	call   13d0 <instruction_cycle>
    1175:	31 c0                	xor    %eax,%eax
    1177:	e8 a4 03 00 00       	call   1520 <print_register>
    117c:	31 c0                	xor    %eax,%eax
    117e:	e8 2d 04 00 00       	call   15b0 <print_stack>
    1183:	83 eb 01             	sub    $0x1,%ebx
    1186:	75 e6                	jne    116e <main+0xee>
    1188:	31 c0                	xor    %eax,%eax
    118a:	5b                   	pop    %rbx
    118b:	c3                   	ret
    118c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001190 <_start>:
    1190:	f3 0f 1e fa          	endbr64
    1194:	31 ed                	xor    %ebp,%ebp
    1196:	49 89 d1             	mov    %rdx,%r9
    1199:	5e                   	pop    %rsi
    119a:	48 89 e2             	mov    %rsp,%rdx
    119d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11a1:	50                   	push   %rax
    11a2:	54                   	push   %rsp
    11a3:	45 31 c0             	xor    %r8d,%r8d
    11a6:	31 c9                	xor    %ecx,%ecx
    11a8:	48 8d 3d d1 fe ff ff 	lea    -0x12f(%rip),%rdi        # 1080 <main>
    11af:	ff 15 23 2e 00 00    	call   *0x2e23(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11b5:	f4                   	hlt
    11b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11bd:	00 00 00 

00000000000011c0 <deregister_tm_clones>:
    11c0:	48 8d 3d 99 39 00 00 	lea    0x3999(%rip),%rdi        # 4b60 <__TMC_END__>
    11c7:	48 8d 05 92 39 00 00 	lea    0x3992(%rip),%rax        # 4b60 <__TMC_END__>
    11ce:	48 39 f8             	cmp    %rdi,%rax
    11d1:	74 15                	je     11e8 <deregister_tm_clones+0x28>
    11d3:	48 8b 05 06 2e 00 00 	mov    0x2e06(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    11da:	48 85 c0             	test   %rax,%rax
    11dd:	74 09                	je     11e8 <deregister_tm_clones+0x28>
    11df:	ff e0                	jmp    *%rax
    11e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11e8:	c3                   	ret
    11e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011f0 <register_tm_clones>:
    11f0:	48 8d 3d 69 39 00 00 	lea    0x3969(%rip),%rdi        # 4b60 <__TMC_END__>
    11f7:	48 8d 35 62 39 00 00 	lea    0x3962(%rip),%rsi        # 4b60 <__TMC_END__>
    11fe:	48 29 fe             	sub    %rdi,%rsi
    1201:	48 89 f0             	mov    %rsi,%rax
    1204:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1208:	48 c1 f8 03          	sar    $0x3,%rax
    120c:	48 01 c6             	add    %rax,%rsi
    120f:	48 d1 fe             	sar    $1,%rsi
    1212:	74 14                	je     1228 <register_tm_clones+0x38>
    1214:	48 8b 05 d5 2d 00 00 	mov    0x2dd5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    121b:	48 85 c0             	test   %rax,%rax
    121e:	74 08                	je     1228 <register_tm_clones+0x38>
    1220:	ff e0                	jmp    *%rax
    1222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1228:	c3                   	ret
    1229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001230 <__do_global_dtors_aux>:
    1230:	f3 0f 1e fa          	endbr64
    1234:	80 3d 25 39 00 00 00 	cmpb   $0x0,0x3925(%rip)        # 4b60 <__TMC_END__>
    123b:	75 2b                	jne    1268 <__do_global_dtors_aux+0x38>
    123d:	55                   	push   %rbp
    123e:	48 83 3d b2 2d 00 00 	cmpq   $0x0,0x2db2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1245:	00 
    1246:	48 89 e5             	mov    %rsp,%rbp
    1249:	74 0c                	je     1257 <__do_global_dtors_aux+0x27>
    124b:	48 8b 3d b6 2d 00 00 	mov    0x2db6(%rip),%rdi        # 4008 <__dso_handle>
    1252:	e8 f9 fd ff ff       	call   1050 <__cxa_finalize@plt>
    1257:	e8 64 ff ff ff       	call   11c0 <deregister_tm_clones>
    125c:	c6 05 fd 38 00 00 01 	movb   $0x1,0x38fd(%rip)        # 4b60 <__TMC_END__>
    1263:	5d                   	pop    %rbp
    1264:	c3                   	ret
    1265:	0f 1f 00             	nopl   (%rax)
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001270 <frame_dummy>:
    1270:	f3 0f 1e fa          	endbr64
    1274:	e9 77 ff ff ff       	jmp    11f0 <register_tm_clones>
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <mov_reg_reg_handler>:
    1280:	f3 0f 1e fa          	endbr64
    1284:	48 8b 07             	mov    (%rdi),%rax
    1287:	48 89 06             	mov    %rax,(%rsi)
    128a:	48 81 05 2b 3a 00 00 	addq   $0xc0,0x3a2b(%rip)        # 4cc0 <reg+0x40>
    1291:	c0 00 00 00 
    1295:	c3                   	ret
    1296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    129d:	00 00 00 

00000000000012a0 <push_reg_handler>:
    12a0:	f3 0f 1e fa          	endbr64
    12a4:	48 83 2d 0c 3a 00 00 	subq   $0x8,0x3a0c(%rip)        # 4cb8 <reg+0x38>
    12ab:	08 
    12ac:	c3                   	ret
    12ad:	0f 1f 00             	nopl   (%rax)

00000000000012b0 <pop_reg_handler>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	c3                   	ret
    12b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    12bc:	00 00 00 00 

00000000000012c0 <add_reg_reg_handler>:
    12c0:	f3 0f 1e fa          	endbr64
    12c4:	48 8b 07             	mov    (%rdi),%rax
    12c7:	48 01 06             	add    %rax,(%rsi)
    12ca:	48 81 05 eb 39 00 00 	addq   $0xc0,0x39eb(%rip)        # 4cc0 <reg+0x40>
    12d1:	c0 00 00 00 
    12d5:	c3                   	ret
    12d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    12dd:	00 00 00 

00000000000012e0 <call_handler>:
    12e0:	f3 0f 1e fa          	endbr64
    12e4:	55                   	push   %rbp
    12e5:	53                   	push   %rbx
    12e6:	48 89 fb             	mov    %rdi,%rbx
    12e9:	48 83 ec 08          	sub    $0x8,%rsp
    12ed:	48 8b 05 c4 39 00 00 	mov    0x39c4(%rip),%rax        # 4cb8 <reg+0x38>
    12f4:	48 8d 78 f8          	lea    -0x8(%rax),%rdi
    12f8:	48 8b 05 c1 39 00 00 	mov    0x39c1(%rip),%rax        # 4cc0 <reg+0x40>
    12ff:	48 89 3d b2 39 00 00 	mov    %rdi,0x39b2(%rip)        # 4cb8 <reg+0x38>
    1306:	48 8d a8 c0 00 00 00 	lea    0xc0(%rax),%rbp
    130d:	e8 4e 03 00 00       	call   1660 <va2pa>
    1312:	48 89 ee             	mov    %rbp,%rsi
    1315:	48 89 c7             	mov    %rax,%rdi
    1318:	e8 d3 01 00 00       	call   14f0 <wirtebits_dram>
    131d:	48 89 1d 9c 39 00 00 	mov    %rbx,0x399c(%rip)        # 4cc0 <reg+0x40>
    1324:	48 83 c4 08          	add    $0x8,%rsp
    1328:	5b                   	pop    %rbx
    1329:	5d                   	pop    %rbp
    132a:	c3                   	ret
    132b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001330 <decode_od.isra.0>:
    1330:	48 89 c8             	mov    %rcx,%rax
    1333:	83 ff 0b             	cmp    $0xb,%edi
    1336:	0f 87 8e 00 00 00    	ja     13ca <decode_od.isra.0+0x9a>
    133c:	4c 8d 0d c1 0c 00 00 	lea    0xcc1(%rip),%r9        # 2004 <_IO_stdin_used+0x4>
    1343:	89 ff                	mov    %edi,%edi
    1345:	49 63 0c b9          	movslq (%r9,%rdi,4),%rcx
    1349:	4c 01 c9             	add    %r9,%rcx
    134c:	3e ff e1             	notrack jmp *%rcx
    134f:	90                   	nop
    1350:	48 03 30             	add    (%rax),%rsi
    1353:	48 89 f7             	mov    %rsi,%rdi
    1356:	e9 05 03 00 00       	jmp    1660 <va2pa>
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1360:	c3                   	ret
    1361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1368:	48 8b 38             	mov    (%rax),%rdi
    136b:	eb e9                	jmp    1356 <decode_od.isra.0+0x26>
    136d:	0f 1f 00             	nopl   (%rax)
    1370:	48 89 f0             	mov    %rsi,%rax
    1373:	c3                   	ret
    1374:	0f 1f 40 00          	nopl   0x0(%rax)
    1378:	49 0f af 10          	imul   (%r8),%rdx
    137c:	48 03 10             	add    (%rax),%rdx
    137f:	48 89 d7             	mov    %rdx,%rdi
    1382:	eb d2                	jmp    1356 <decode_od.isra.0+0x26>
    1384:	0f 1f 40 00          	nopl   0x0(%rax)
    1388:	49 0f af 10          	imul   (%r8),%rdx
    138c:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    1390:	48 03 38             	add    (%rax),%rdi
    1393:	eb c1                	jmp    1356 <decode_od.isra.0+0x26>
    1395:	0f 1f 00             	nopl   (%rax)
    1398:	49 8b 38             	mov    (%r8),%rdi
    139b:	48 03 38             	add    (%rax),%rdi
    139e:	eb b6                	jmp    1356 <decode_od.isra.0+0x26>
    13a0:	49 8b 10             	mov    (%r8),%rdx
    13a3:	48 03 10             	add    (%rax),%rdx
    13a6:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    13aa:	eb aa                	jmp    1356 <decode_od.isra.0+0x26>
    13ac:	0f 1f 40 00          	nopl   0x0(%rax)
    13b0:	48 0f af 10          	imul   (%rax),%rdx
    13b4:	48 89 d7             	mov    %rdx,%rdi
    13b7:	eb 9d                	jmp    1356 <decode_od.isra.0+0x26>
    13b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13c0:	48 0f af 10          	imul   (%rax),%rdx
    13c4:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    13c8:	eb 8c                	jmp    1356 <decode_od.isra.0+0x26>
    13ca:	31 ff                	xor    %edi,%edi
    13cc:	eb 88                	jmp    1356 <decode_od.isra.0+0x26>
    13ce:	66 90                	xchg   %ax,%ax

00000000000013d0 <instruction_cycle>:
    13d0:	f3 0f 1e fa          	endbr64
    13d4:	55                   	push   %rbp
    13d5:	53                   	push   %rbx
    13d6:	48 83 ec 08          	sub    $0x8,%rsp
    13da:	48 8b 1d df 38 00 00 	mov    0x38df(%rip),%rbx        # 4cc0 <reg+0x40>
    13e1:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    13e5:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    13e9:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    13ed:	8b 7b 08             	mov    0x8(%rbx),%edi
    13f0:	4c 8b 43 28          	mov    0x28(%rbx),%r8
    13f4:	e8 37 ff ff ff       	call   1330 <decode_od.isra.0>
    13f9:	48 8b 4b 48          	mov    0x48(%rbx),%rcx
    13fd:	48 8b 53 40          	mov    0x40(%rbx),%rdx
    1401:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    1405:	8b 7b 30             	mov    0x30(%rbx),%edi
    1408:	48 89 c5             	mov    %rax,%rbp
    140b:	4c 8b 43 50          	mov    0x50(%rbx),%r8
    140f:	e8 1c ff ff ff       	call   1330 <decode_od.isra.0>
    1414:	8b 13                	mov    (%rbx),%edx
    1416:	48 89 ef             	mov    %rbp,%rdi
    1419:	48 89 c6             	mov    %rax,%rsi
    141c:	48 8d 05 5d 37 00 00 	lea    0x375d(%rip),%rax        # 4b80 <handler_table>
    1423:	ff 14 d0             	call   *(%rax,%rdx,8)
    1426:	48 83 c4 08          	add    $0x8,%rsp
    142a:	48 8d 53 58          	lea    0x58(%rbx),%rdx
    142e:	bf 02 00 00 00       	mov    $0x2,%edi
    1433:	5b                   	pop    %rbx
    1434:	48 8d 35 f9 0b 00 00 	lea    0xbf9(%rip),%rsi        # 2034 <_IO_stdin_used+0x34>
    143b:	31 c0                	xor    %eax,%eax
    143d:	5d                   	pop    %rbp
    143e:	e9 2d fc ff ff       	jmp    1070 <__printf_chk@plt>
    1443:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    144a:	00 00 00 00 
    144e:	66 90                	xchg   %ax,%ax

0000000000001450 <init_handler_table>:
    1450:	f3 0f 1e fa          	endbr64
    1454:	48 8d 05 25 fe ff ff 	lea    -0x1db(%rip),%rax        # 1280 <mov_reg_reg_handler>
    145b:	48 8d 15 3e fe ff ff 	lea    -0x1c2(%rip),%rdx        # 12a0 <push_reg_handler>
    1462:	48 89 05 17 37 00 00 	mov    %rax,0x3717(%rip)        # 4b80 <handler_table>
    1469:	48 8d 05 70 fe ff ff 	lea    -0x190(%rip),%rax        # 12e0 <call_handler>
    1470:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1475:	48 89 05 2c 37 00 00 	mov    %rax,0x372c(%rip)        # 4ba8 <handler_table+0x28>
    147c:	48 8d 05 3d fe ff ff 	lea    -0x1c3(%rip),%rax        # 12c0 <add_reg_reg_handler>
    1483:	48 89 05 2e 37 00 00 	mov    %rax,0x372e(%rip)        # 4bb8 <handler_table+0x38>
    148a:	48 8d 05 1f fe ff ff 	lea    -0x1e1(%rip),%rax        # 12b0 <pop_reg_handler>
    1491:	66 48 0f 6e c8       	movq   %rax,%xmm1
    1496:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    149a:	0f 11 05 f7 36 00 00 	movups %xmm0,0x36f7(%rip)        # 4b98 <handler_table+0x18>
    14a1:	c3                   	ret
    14a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    14a9:	00 00 00 
    14ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000014b0 <read64bits_dram>:
    14b0:	f3 0f 1e fa          	endbr64
    14b4:	48 8d 15 25 38 00 00 	lea    0x3825(%rip),%rdx        # 4ce0 <mm>
    14bb:	31 c9                	xor    %ecx,%ecx
    14bd:	31 f6                	xor    %esi,%esi
    14bf:	48 01 fa             	add    %rdi,%rdx
    14c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14c8:	0f b6 02             	movzbl (%rdx),%eax
    14cb:	48 83 c2 01          	add    $0x1,%rdx
    14cf:	48 d3 e0             	shl    %cl,%rax
    14d2:	83 c1 08             	add    $0x8,%ecx
    14d5:	48 01 c6             	add    %rax,%rsi
    14d8:	83 f9 40             	cmp    $0x40,%ecx
    14db:	75 eb                	jne    14c8 <read64bits_dram+0x18>
    14dd:	48 89 f0             	mov    %rsi,%rax
    14e0:	c3                   	ret
    14e1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    14e8:	00 00 00 00 
    14ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000014f0 <wirtebits_dram>:
    14f0:	f3 0f 1e fa          	endbr64
    14f4:	48 8d 05 e5 37 00 00 	lea    0x37e5(%rip),%rax        # 4ce0 <mm>
    14fb:	31 c9                	xor    %ecx,%ecx
    14fd:	48 01 f8             	add    %rdi,%rax
    1500:	48 89 f2             	mov    %rsi,%rdx
    1503:	48 83 c0 01          	add    $0x1,%rax
    1507:	48 d3 ea             	shr    %cl,%rdx
    150a:	83 c1 08             	add    $0x8,%ecx
    150d:	88 50 ff             	mov    %dl,-0x1(%rax)
    1510:	83 f9 40             	cmp    $0x40,%ecx
    1513:	75 eb                	jne    1500 <wirtebits_dram+0x10>
    1515:	c3                   	ret
    1516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    151d:	00 00 00 

0000000000001520 <print_register>:
    1520:	f3 0f 1e fa          	endbr64
    1524:	48 83 ec 08          	sub    $0x8,%rsp
    1528:	4c 8b 0d 69 37 00 00 	mov    0x3769(%rip),%r9        # 4c98 <reg+0x18>
    152f:	4c 8b 05 5a 37 00 00 	mov    0x375a(%rip),%r8        # 4c90 <reg+0x10>
    1536:	48 8d 35 33 0b 00 00 	lea    0xb33(%rip),%rsi        # 2070 <_IO_stdin_used+0x70>
    153d:	48 8b 0d 44 37 00 00 	mov    0x3744(%rip),%rcx        # 4c88 <reg+0x8>
    1544:	48 8b 15 35 37 00 00 	mov    0x3735(%rip),%rdx        # 4c80 <reg>
    154b:	bf 02 00 00 00       	mov    $0x2,%edi
    1550:	31 c0                	xor    %eax,%eax
    1552:	e8 19 fb ff ff       	call   1070 <__printf_chk@plt>
    1557:	4c 8b 0d 5a 37 00 00 	mov    0x375a(%rip),%r9        # 4cb8 <reg+0x38>
    155e:	31 c0                	xor    %eax,%eax
    1560:	4c 8b 05 49 37 00 00 	mov    0x3749(%rip),%r8        # 4cb0 <reg+0x30>
    1567:	48 8b 0d 3a 37 00 00 	mov    0x373a(%rip),%rcx        # 4ca8 <reg+0x28>
    156e:	48 8b 15 2b 37 00 00 	mov    0x372b(%rip),%rdx        # 4ca0 <reg+0x20>
    1575:	bf 02 00 00 00       	mov    $0x2,%edi
    157a:	48 8d 35 27 0b 00 00 	lea    0xb27(%rip),%rsi        # 20a8 <_IO_stdin_used+0xa8>
    1581:	e8 ea fa ff ff       	call   1070 <__printf_chk@plt>
    1586:	48 8b 15 33 37 00 00 	mov    0x3733(%rip),%rdx        # 4cc0 <reg+0x40>
    158d:	bf 02 00 00 00       	mov    $0x2,%edi
    1592:	31 c0                	xor    %eax,%eax
    1594:	48 8d 35 a9 0a 00 00 	lea    0xaa9(%rip),%rsi        # 2044 <_IO_stdin_used+0x44>
    159b:	e8 d0 fa ff ff       	call   1070 <__printf_chk@plt>
    15a0:	bf 0a 00 00 00       	mov    $0xa,%edi
    15a5:	48 83 c4 08          	add    $0x8,%rsp
    15a9:	e9 b2 fa ff ff       	jmp    1060 <putchar@plt>
    15ae:	66 90                	xchg   %ax,%ax

00000000000015b0 <print_stack>:
    15b0:	f3 0f 1e fa          	endbr64
    15b4:	41 56                	push   %r14
    15b6:	48 8b 3d fb 36 00 00 	mov    0x36fb(%rip),%rdi        # 4cb8 <reg+0x38>
    15bd:	4c 8d 35 9e 0a 00 00 	lea    0xa9e(%rip),%r14        # 2062 <_IO_stdin_used+0x62>
    15c4:	41 55                	push   %r13
    15c6:	4c 8d 2d 84 0a 00 00 	lea    0xa84(%rip),%r13        # 2051 <_IO_stdin_used+0x51>
    15cd:	41 54                	push   %r12
    15cf:	4c 8d 25 0a 37 00 00 	lea    0x370a(%rip),%r12        # 4ce0 <mm>
    15d6:	55                   	push   %rbp
    15d7:	31 ed                	xor    %ebp,%ebp
    15d9:	53                   	push   %rbx
    15da:	e8 81 00 00 00       	call   1660 <va2pa>
    15df:	48 8b 15 d2 36 00 00 	mov    0x36d2(%rip),%rdx        # 4cb8 <reg+0x38>
    15e6:	48 29 d0             	sub    %rdx,%rax
    15e9:	48 8d 5a 50          	lea    0x50(%rdx),%rbx
    15ed:	49 01 c4             	add    %rax,%r12
    15f0:	eb 1c                	jmp    160e <print_stack+0x5e>
    15f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15f8:	bf 0a 00 00 00       	mov    $0xa,%edi
    15fd:	83 c5 01             	add    $0x1,%ebp
    1600:	48 83 eb 08          	sub    $0x8,%rbx
    1604:	e8 57 fa ff ff       	call   1060 <putchar@plt>
    1609:	83 fd 14             	cmp    $0x14,%ebp
    160c:	74 42                	je     1650 <print_stack+0xa0>
    160e:	49 8b 0c 1c          	mov    (%r12,%rbx,1),%rcx
    1612:	31 c0                	xor    %eax,%eax
    1614:	48 89 da             	mov    %rbx,%rdx
    1617:	4c 89 ee             	mov    %r13,%rsi
    161a:	bf 02 00 00 00       	mov    $0x2,%edi
    161f:	e8 4c fa ff ff       	call   1070 <__printf_chk@plt>
    1624:	83 fd 0a             	cmp    $0xa,%ebp
    1627:	75 cf                	jne    15f8 <print_stack+0x48>
    1629:	4c 89 f6             	mov    %r14,%rsi
    162c:	bf 02 00 00 00       	mov    $0x2,%edi
    1631:	31 c0                	xor    %eax,%eax
    1633:	48 83 eb 08          	sub    $0x8,%rbx
    1637:	e8 34 fa ff ff       	call   1070 <__printf_chk@plt>
    163c:	bf 0a 00 00 00       	mov    $0xa,%edi
    1641:	bd 0b 00 00 00       	mov    $0xb,%ebp
    1646:	e8 15 fa ff ff       	call   1060 <putchar@plt>
    164b:	eb c1                	jmp    160e <print_stack+0x5e>
    164d:	0f 1f 00             	nopl   (%rax)
    1650:	5b                   	pop    %rbx
    1651:	5d                   	pop    %rbp
    1652:	41 5c                	pop    %r12
    1654:	41 5d                	pop    %r13
    1656:	41 5e                	pop    %r14
    1658:	c3                   	ret
    1659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001660 <va2pa>:
    1660:	f3 0f 1e fa          	endbr64
    1664:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    166b:	9b c4 20 
    166e:	48 89 f8             	mov    %rdi,%rax
    1671:	48 c1 e8 03          	shr    $0x3,%rax
    1675:	48 f7 e2             	mul    %rdx
    1678:	48 89 d0             	mov    %rdx,%rax
    167b:	48 c1 e8 04          	shr    $0x4,%rax
    167f:	48 69 d0 e8 03 00 00 	imul   $0x3e8,%rax,%rdx
    1686:	48 89 f8             	mov    %rdi,%rax
    1689:	48 29 d0             	sub    %rdx,%rax
    168c:	c3                   	ret

Disassembly of section .fini:

0000000000001690 <_fini>:
    1690:	f3 0f 1e fa          	endbr64
    1694:	48 83 ec 08          	sub    $0x8,%rsp
    1698:	48 83 c4 08          	add    $0x8,%rsp
    169c:	c3                   	ret
